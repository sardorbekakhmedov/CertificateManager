version: '3.8'

services:
  certificate_manager:
    image: certificate_manager
    container_name: certificate_manager
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.CertificateManager
    ports:
      - '8080:8080'
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      - certificate_db
      - rabbitmq
    networks:
      - certificate_network
 
  certificate_blazor_manager:
    image: certificate_blazor_manager
    container_name: certificate_blazor_manager
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.CertificateManager.BlazorUI
    ports:
      - '5277:80'
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    networks:
      - certificate_network
 
  certificate_db:
    image: postgres:latest
    container_name: certificate_db
    environment:
      - POSTGRES_PASSWORD=certificate_password
      - POSTGRES_USER=certificate_username
      - POSTGRES_DB=certificate_database
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - certificate_db_data:/var/lib/postgresql/data/
    networks:
      - certificate_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
       - certificate_network

volumes: 
  certificate_db_data:

networks:
  certificate_network:
